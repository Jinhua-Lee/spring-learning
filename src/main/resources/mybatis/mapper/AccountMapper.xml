<?xml version="1.0" encoding="UTF8" ?>

<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.spring.learning.tx.mapper.AccountMapper">

    <!-- 开启二级缓存，或者在Mapper接口上加注解 @@CacheNamespace -->
    <!-- 单元测试的时候没有Mapper扫描，所以必须在此处开启-->
<!--    <cache/>-->

    <sql id="selectAccount">
        select <include refid="selectAccountFields"/>
        from account
    </sql>

    <sql id="selectAccountFields">
        id, name, age, balance
    </sql>

    <insert id="insertAccountOrIncreaseBalance" useGeneratedKeys="true" keyProperty="id"
            parameterType="cn.spring.learning.tx.entity.Account">
        insert into account(name, age, balance)
        values (#{name}, #{age}, #{balance})
        on duplicate key update balance = balance + #{balance};
    </insert>

    <insert id="addAccount">
        <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER">
            select LAST_INSERT_ID()
        </selectKey>
        insert into account(name, age, balance)
        values (#{name}, #{age}, #{balance});
    </insert>

    <!--查询指定账户的余额-->
    <select id="getBalanceById" resultType="cn.spring.learning.tx.entity.Account">
        select id, balance
        from account
        where id = #{accountId};
    </select>

    <!--查询指定账户的余额-->
    <select id="getBalanceById2" resultType="cn.spring.learning.tx.entity.Account" flushCache="true">
        select id, balance
        from account
        where id = #{accountId};
    </select>

    <!--查询所有账户-->
    <select id="getAllAccounts" resultType="cn.spring.learning.tx.entity.Account">
        <include refid="selectAccount"/>;
    </select>

    <!--根据入参Map来查询账户-->
    <select id="getAccountByArgMap" resultType="cn.spring.learning.tx.entity.Account">
        <include refid="selectAccount"/>
        <if test="argMap != null and !argMap.isEmpty()">
            <where>
                <if test="argMap.id != null">
                    and id = #{argMap.id}
                </if>
                <if test="argMap.name != null">
                    and name like '%${argMap.name}%'
                </if>
            </where>
        </if>;
    </select>

    <!--根据ID和姓名片段来查询账户-->
    <select id="getAccountByIdAndNamePart" resultType="cn.spring.learning.tx.entity.Account">
        <include refid="selectAccount"/>
        <if test="id != null or name != null">
            <where>
                <if test="id != null">
                    and id = #{id}
                </if>
                <if test="name != null">
                    and name like '%${name}%'
                </if>
            </where>
        </if>;
    </select>

    <update id="increaseBalance">
        update account
        set balance = balance + #{balance}
        where id = #{accountId};
    </update>

    <update id="increaseBalanceByName">
        update account
        set balance = balance + #{balance}
        where name = #{name}
    </update>
</mapper>