<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

    <context:component-scan base-package="cn.demo.springlearning.bean"/>

    <!--    scope：-->
    <!--        1) singleton（默认，初始化即创建）-->
    <!--        2) prototype（每次获取，根据原型创建）-->
    <!--        3) request（Web环境，bean生命周期与request一致）-->
    <!--        4) session（Web环境，bean生命周期与session一致）-->

    <!--单例：每次返回同一个-->
    <bean id="sBean" class="cn.demo.springlearning.bean.SingletonBean">
        <property name="id" value="1"/>
        <property name="name" value="学生小明"/>
    </bean>
    <!--原型：每次根据原型克隆出新的对象-->
    <bean id="pBean" class="cn.demo.springlearning.bean.PrototypeBean" scope="prototype">
        <property name="id" value="1"/>
        <property name="name" value="学生小明"/>
    </bean>

    <!--静态工厂构造：静态方法，只需指定所在类即可-->
    <bean id="beanStatic" class="cn.demo.springlearning.factory.MyBeanFactory"
          factory-method="getSingletonStatic"/>

    <!--实例工厂创建：需要将工厂注册为bean-->
    <bean id="beanFactory" class="cn.demo.springlearning.factory.MyBeanFactory"/>
    <bean id="fBean" factory-bean="beanFactory" factory-method="getSingleton"/>

    <!--初始化及销毁方法-->
    <bean id="initDestroy" class="cn.demo.springlearning.bean.SingletonBean" init-method="init" destroy-method="destroy">
        <property name="id" value="1"/>
        <property name="name" value="学生小明"/>
    </bean>

    <!--导入其他spring配置-->
    <import resource="tx.xml"/>
</beans>